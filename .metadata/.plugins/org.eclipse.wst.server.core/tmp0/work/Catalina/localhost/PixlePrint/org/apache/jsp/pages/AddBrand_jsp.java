/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-05-14 06:15:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import utils.Utilities;
import java.util.List;
import models.BrandModel;

public final class AddBrand_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/pages/AdminSidebar.jsp", Long.valueOf(1715665325583L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("utils.Utilities");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("models.BrandModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Admin Side Bar</title>\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap\"rel=\"stylesheet\"/>\n");
      out.write("    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\"/>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/AdminSidebar.css\"/>\n");
      out.write("    \n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div style=\"width:400px; height: 850px;\">\n");
      out.write("	      <aside id=\"sidebar\">\n");
      out.write("        <div class=\"sidebar-title\">\n");
      out.write("          <div class=\"sidebar-brand\">\n");
      out.write("            <span class=\"material-icons-outlined\">shopping_cart</span\n");
      out.write("            >Pixelprinter\n");
      out.write("          </div>\n");
      out.write("          <span class=\"material-icons-outlined\" onclick=\"closeSidebar()\"\n");
      out.write("            >close</span>\n");
      out.write("        </div>\n");
      out.write(" <ul class=\"sidebar-list\">\n");
      out.write("    <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/AddProductServlet\">\n");
      out.write("            <span class=\"material-icons-outlined\">print</span> Add Product\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/DisplayProductServlet\">\n");
      out.write("            <span class=\"material-icons-outlined\">inventory_2</span> Products\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/AddBrand\">\n");
      out.write("            <span class=\"material-icons-outlined\">category</span> Add Categories\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/DisplayUserDetailsServlet\">\n");
      out.write("            <span class=\"material-icons-outlined\">group</span> Customers\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"inventory.jsp\">\n");
      out.write("        	<span class=\"material-icons-outlined\">mark_email_unread</span> Messages\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("        <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/AddAdmin.jsp\">\n");
      out.write("            <span class=\"material-icons-outlined\">person_add</span> Add Admin\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/AdminSalesReportServlet\">\n");
      out.write("            <span class=\"material-icons-outlined\">view_kanban</span> Reports\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("        <li class=\"sidebar-list-item\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/LogoutServlet\">\n");
      out.write("            <span class=\"material-icons-outlined\">logout</span> Logout\n");
      out.write("        </a>\n");
      out.write("    </li>\n");
      out.write("</ul>\n");
      out.write("      </aside>\n");
      out.write("	</div>\n");
      out.write("	    <script\n");
      out.write("      type=\"text/javascript\"\n");
      out.write("      src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/AdminHome.js\"\n");
      out.write("    ></script>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Add Brand</title>\n");
      out.write("    <style>\n");
      out.write("    \n");
      out.write("    	input[type=\"submit\"] {\n");
      out.write("	    background-color: #ffb6c1; /* Light pink color */\n");
      out.write("	    color: white;\n");
      out.write("	    border: none;\n");
      out.write("	    border-radius: 4px;\n");
      out.write("	    padding: 10px 20px;\n");
      out.write("	    cursor: pointer;\n");
      out.write("	    font-weight: bold;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	input[type=\"submit\"]:hover {\n");
      out.write("	    background-color: #ff99b4; /* Lighter pink color on hover */\n");
      out.write("	}\n");
      out.write("    	input[type=\"text\"] {\n");
      out.write("    width: 300px; /* Set the width of the text boxes */\n");
      out.write("    padding: 5px; /* Add some padding for better appearance */\n");
      out.write("    margin-bottom: 10px; /* Add some space between the text boxes */\n");
      out.write("}\n");
      out.write("    	\n");
      out.write("  		.container {\n");
      out.write("	    width: 150px; /* Set the width of the container */\n");
      out.write("	    margin: 0 500px auto; /* Center the container horizontally */\n");
      out.write("	    margin-top: -850px;\n");
      out.write("	    padding: 5px;\n");
      out.write("	    flex-direction: column; /* Arrange children vertically */\n");
      out.write("	    align-items: flex-end; /* Align children to the right */\n");
      out.write("}\n");
      out.write("  		\n");
      out.write("        /* CSS styles for the table */\n");
      out.write("        table {\n");
      out.write("            width: 100%;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("        }\n");
      out.write("        th, td {\n");
      out.write("            border: 1px solid #ddd;\n");
      out.write("            padding: 8px;\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("        th {\n");
      out.write("            background-color: #f2f2f2;\n");
      out.write("        }\n");
      out.write("        /* CSS styles for action buttons */\n");
      out.write("        .action-btn {\n");
      out.write("            padding: 5px 10px;\n");
      out.write("            text-decoration: none;\n");
      out.write("            background-color: #4CAF50;\n");
      out.write("            color: white;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 3px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            margin-right: 5px;\n");
      out.write("        }\n");
      out.write("        .action-btn.delete {\n");
      out.write("            background-color: #f44336;\n");
      out.write("        }\n");
      out.write("        .show-brands {\n");
      out.write("	    margin: 400px;\n");
      out.write("	    margin-top: -20px;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.show-brands table {\n");
      out.write("		    width: 100%;\n");
      out.write("		    border-collapse: collapse;\n");
      out.write("		    margin: 200px; /* Add some space between the heading and the table */\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.show-brands th, .show-brands td {\n");
      out.write("		    padding: 8px;\n");
      out.write("		    border-bottom: 1px solid #ddd;\n");
      out.write("		    text-align: left;\n");
      out.write("		}\n");
      out.write("		 h1{\n");
      out.write("			margin-top: 80px;\n");
      out.write("			text-align: center;\n");
      out.write("		}\n");
      out.write("		.show-brands{\n");
      out.write("		margin-top: -150px;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.show-brands th {\n");
      out.write("			justify-content: center;\n");
      out.write("		    background-color: #f2f2f2;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.show-brands .action-btn {\n");
      out.write("		    display: inline-block;\n");
      out.write("		    padding: 6px 12px;\n");
      out.write("		    text-decoration: none;\n");
      out.write("		    border-radius: 4px;\n");
      out.write("		    background-color: #007bff;\n");
      out.write("		    color: #fff;\n");
      out.write("		    margin-right: 5px;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.show-brands .action-btn.delete {\n");
      out.write("		    background-color: #dc3545;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.show-brands .action-btn:hover {\n");
      out.write("		    background-color: #0056b3;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		.show-brands .action-btn.delete:hover {\n");
      out.write("		    background-color: #c82333;\n");
      out.write("		}\n");
      out.write("	     .message-from-backend {\n");
      out.write("	    margin-top: 20px;\n");
      out.write("	    padding: 10px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.alert {\n");
      out.write("	    padding: 15px;\n");
      out.write("	    margin-bottom: 20px;\n");
      out.write("	    border-radius: 4px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.alert-success {\n");
      out.write("	    color: #155724;\n");
      out.write("	    background-color: #d4edda;\n");
      out.write("	    border-color: #c3e6cb;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.alert-danger {\n");
      out.write("	    color: #721c24;\n");
      out.write("	    background-color: #f8d7da;\n");
      out.write("	    border-color: #f5c6cb;\n");
      out.write("	}\n");
      out.write("	.alert-success strong {\n");
      out.write("    font-weight: bold;\n");
      out.write("	}\n");
      out.write("	      	\n");
      out.write("	        \n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"message-from-backend\">\n");
      out.write("        ");
 if (request.getAttribute(Utilities.SUCCESS_MESSAGE) != null) { 
      out.write("\n");
      out.write("        <div class=\"alert alert-success\" role=\"alert\">\n");
      out.write("            ");
      out.print(request.getAttribute(Utilities.SUCCESS_MESSAGE));
      out.write("\n");
      out.write("        </div>\n");
      out.write("        ");
 } else if (request.getAttribute(Utilities.ERROR_MESSAGE) != null) { 
      out.write("\n");
      out.write("        ");
 if (request.getAttribute(Utilities.ERROR_MESSAGE).equals(Utilities.INCORRECT_FORM_DATA_MESSAGE)) { 
      out.write("\n");
      out.write("        <div class=\"alert alert-danger\" role=\"alert\">\n");
      out.write("            ");
      out.print(request.getAttribute(Utilities.ERROR_MESSAGE));
      out.write("\n");
      out.write("        </div>\n");
      out.write("        ");
 } else if (request.getAttribute(Utilities.ERROR_MESSAGE).equals(Utilities.SERVER_ERROR_MESSAGE)) { 
      out.write("\n");
      out.write("        <div class=\"alert alert-danger\" role=\"alert\">\n");
      out.write("            ");
      out.print(request.getAttribute(Utilities.ERROR_MESSAGE));
      out.write("\n");
      out.write("        </div>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <h2>Add Brand</h2>\n");
      out.write("       <form id=\"brandForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/AddBrand\" method=\"post\">\n");
      out.write("	    <label for=\"companyName\">Company Name:</label><br>\n");
      out.write("	    <input type=\"text\" id=\"companyName\" name=\"companyName\" required><br><br>\n");
      out.write("	    <label for=\"country\">Country:</label><br>\n");
      out.write("	    <input type=\"text\" id=\"country\" name=\"country\"><br><br>\n");
      out.write("	    <label for=\"contactInformation\">Contact Information:</label><br>\n");
      out.write("	    <input type=\"text\" id=\"contactInformation\" name=\"contactInformation\"><br><br>\n");
      out.write("	    <label for=\"website\">Website:</label><br>\n");
      out.write("	    <input type=\"text\" id=\"website\" name=\"website\"><br><br>\n");
      out.write("	    <input type=\"submit\" value=\"Submit\" >\n");
      out.write("	</form>\n");
      out.write("	\n");
      out.write("	\n");
      out.write("    </div>\n");
      out.write("        <h1>List of Brands</h1>\n");
      out.write("        <div class=\"show-brands\">\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>Company Name</th>\n");
      out.write("                <th>Country</th>\n");
      out.write("                <th>Contact Information</th>\n");
      out.write("                <th>Website</th>\n");
      out.write("                <th>Actions</th>\n");
      out.write("            </tr>\n");
      out.write("            ");
 
            List<BrandModel> brands = (List<BrandModel>) request.getAttribute("brands");
            if (brands != null) {
                for (BrandModel brand : brands) { 
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td>");
      out.print( brand.getCompanyName() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( brand.getCountry() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( brand.getContactInformation() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( brand.getWebsite() );
      out.write("</td>\n");
      out.write("                <td>\n");
      out.write("                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ModifyBrandServlet?id=");
      out.print( brand.getBrandId() );
      out.write("\" class=\"action-btn\">Edit</a>\n");
      out.write("                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ModifyBrandServlet?id=");
      out.print( brand.getBrandId() );
      out.write("\" class=\"action-btn delete\">Delete</a>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            ");
 
                } 
            } 
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("    </div>\n");
      out.write("  \n");
      out.write(" \n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
