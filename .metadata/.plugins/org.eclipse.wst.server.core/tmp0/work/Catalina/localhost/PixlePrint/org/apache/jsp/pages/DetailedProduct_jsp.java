/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-05-14 06:25:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import models.ProductModel;

public final class DetailedProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("models.ProductModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Printer Design</title>\n");
      out.write("\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/DetailedProduct.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/Header.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/Footer.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"container mt-5\">\n");
      out.write("                        ");

                        List<ProductModel> products = (List<ProductModel>) request.getAttribute("products");
                        if (products != null) {
                            for (ProductModel product : products) {
                    
      out.write("\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col-lg-6\">\n");
      out.write("                <div class=\"product-image\">\n");
      out.write("                	<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/Uploads/ProductImages/");
      out.print( product.getProductImage() );
      out.write("\"\n");
      out.write("                                    alt=\"");
      out.print( product.getProductName() );
      out.write("\" class=\"img-fluid\">\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col-lg-6\">\n");
      out.write("                <div class=\"product-details\">\n");
      out.write("                    <h2>PIXMA G44770</h2>\n");
      out.write("                    <div class=\"product-price\">\n");
      out.write("                        <span class=\"sale-price\">NRP 10000.00</span>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"product-details\">\n");
      out.write("                        <h3>What You Get</h3>\n");
      out.write("                        <p>");
      out.print(product.getProductDescription());
      out.write("</p>\n");
      out.write("                        <h2><u>Specifications</u></h2>\n");
      out.write("\n");
      out.write("                        <strong>Print Technology:</strong> ");
      out.print(product.getPrintTechnology());
      out.write("<br> \n");
      out.write("                        <strong>Print Speed:</strong> ");
      out.print(product.getPrintSpeed());
      out.write("<br> \n");
      out.write("                        <strong>Print Resolution:</strong> ");
      out.print(product.getPrintResolution());
      out.write("<br> \n");
      out.write("                        <strong>Weight:</strong> ");
      out.print(product.getWeight());
      out.write("<br> \n");
      out.write("                        <strong>Dimensions:</strong> ");
      out.print(product.getDimensions());
      out.write("<br>\n");
      out.write("                        <strong>Operating System:</strong> ");
      out.print(product.getOperatingSystem());
      out.write("<br> \n");
      out.write("                        <strong>Supported Page Size:</strong> ");
      out.print(product.getSupportedPageSize());
      out.write("<br> \n");
      out.write("                        <strong>Printer Color:</strong> ");
      out.print(product.getColor());
      out.write("<br> \n");
      out.write("                        <strong>Print Color:</strong> ");
      out.print(product.getPrintColor());
      out.write("<br>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"product-btn-group\">\n");
      out.write("                        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/AddToCartServlet\" method=\"post\">\n");
      out.write("                            <input type=\"hidden\" value=\"");
      out.print(product.getProductId());
      out.write("\" name=\"productId\"> \n");
      out.write("                            <input type=\"hidden\" value=\"");
      out.print(product.getProductName());
      out.write("\" name=\"productName\">\n");
      out.write("                            <input type=\"hidden\" value=\"1\" name=\"quantity\"> \n");
      out.write("                            <input type=\"hidden\" value=\"");
      out.print(session.getAttribute("userId"));
      out.write("\" name=\"userId\">\n");
      out.write("                            <input type=\"hidden\" value=");
      out.print(product.getPrice());
      out.write(" name=\"price\"> \n");
      out.write("                            <button type=\"submit\" class=\"btn add-to-cart-btn\" >Add to cart</button>\n");
      out.write("                        </form>\n");
      out.write("                        <br>\n");
      out.write("                        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/PurchaseServlet\" method=\"post\">\n");
      out.write("                            <input type=\"hidden\" value=\"1\" name=\"quantity\"> \n");
      out.write("                            <input type=\"hidden\" value=");
      out.print(product.getPrice());
      out.write(" name=\"price\"> \n");
      out.write("                            <input type=\"hidden\" value=");
      out.print(product.getProductId());
      out.write(" name=\"productId\"> \n");
      out.write("                            <button type=\"submit\" class=\"btn buy-now-btn\" type=\"button\">Buy Now</button>\n");
      out.write("                        </form>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("                                        \n");
      out.write("                    ");

                            }
                        }
                    
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
